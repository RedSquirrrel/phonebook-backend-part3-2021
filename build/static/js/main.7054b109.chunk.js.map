{"version":3,"sources":["services/persons.js","components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","id","delete","update","put","Filter","handleFilter","type","onChange","Person","person","name","number","Persons","persons","handleDelete","map","onClick","PersonForm","addPerson","handleChangeName","handleChangePhone","newName","newPhoneNumber","onSubmit","value","Notification","message","checker","className","App","useState","setPersons","setNewName","setNewPhoneNumber","filter","setFilter","showMessage","setShowMessage","setChecker","useEffect","personService","initialPersons","existingPerson","some","p","toLowerCase","existingNumber","n","filterPersons","includes","event","target","preventDefault","personObject","updatePersonInfo","find","returnedPerson","setTimeout","catch","error","console","log","window","confirm","concat","changedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7054b109.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst services = { getAll, create, deletePerson, update };\r\nexport default services;\r\n","const Filter = ({ handleFilter }) => {\r\n  return (\r\n    <div>\r\n      Filter shown with <input type='text' onChange={handleFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const Person = ({ person }) => {\r\n  return (\r\n    <>\r\n      {person.name} {person.number}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import Person from './Person';\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      {persons.map(person => {\r\n        return (\r\n          <p key={person.name}>\r\n            <Person person={person} />\r\n            <button\r\n              onClick={() => {\r\n                handleDelete(person.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","const PersonForm = ({\r\n  addPerson,\r\n  handleChangeName,\r\n  handleChangePhone,\r\n  newName,\r\n  newPhoneNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleChangeName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newPhoneNumber} onChange={handleChangePhone} />\r\n      </div>\r\n      <div>\r\n        <button type='submit'>add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const Notification = ({ message, checker }) => {\r\n  if (message === null) {\r\n    return;\r\n  }\r\n\r\n  return <div className={checker ? 'success' : 'error'}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport './index.css';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [showMessage, setShowMessage] = useState('');\n  const [checker, setChecker] = useState(true);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const existingPerson = persons.some(p => p.name.toLowerCase() === newName.toLowerCase());\n  const existingNumber = persons.some(n => n.number.toLowerCase() === newPhoneNumber);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newPhoneNumber,\n    };\n\n    const updatePersonInfo = () => {\n      const id = persons.find(p => p.name.toLowerCase() === newName.toLowerCase()).id;\n      personService\n        .update(id, personObject)\n        .then(returnedPerson => {\n          setChecker(true);\n          setShowMessage(`${returnedPerson.name} has successfully updated`);\n          setTimeout(() => {\n            setShowMessage(null);\n          }, 4000);\n          setPersons(persons.map(p => (p.id !== id ? p : returnedPerson)));\n          setNewName('');\n        })\n        .catch(error => {\n          setChecker(false);\n          setShowMessage(\n            `Information of ${personObject.name} has already been removed from the server`\n          );\n          setTimeout(() => {\n            setShowMessage(null);\n          }, 4000);\n          setPersons(persons.filter(p => p.id !== id));\n          console.log(error);\n        });\n\n      setNewName('');\n      setNewPhoneNumber('');\n    };\n\n    if (\n      existingPerson &&\n      existingNumber &&\n      window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      return updatePersonInfo();\n    } else if (\n      existingPerson &&\n      !existingNumber &&\n      window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      return updatePersonInfo();\n    } else if (personObject.name && personObject.number && !existingPerson) {\n      personService.create(personObject).then(returnedPerson => {\n        setChecker(true);\n        setShowMessage(`Added ${returnedPerson.name}`);\n        setTimeout(() => {\n          setShowMessage(null);\n        }, 4000);\n        setPersons(persons.concat(returnedPerson));\n      });\n    }\n    setNewName('');\n    setNewPhoneNumber('');\n  };\n\n  const handleChangeName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleChangePhone = event => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const filterPersons = persons.filter(p => {\n    return p.name.toLowerCase().includes(filter);\n  });\n\n  const handleDelete = id => {\n    const person = persons.find(p => p.id === id);\n    const changedPerson = { ...person, name: person.name };\n\n    if (window.confirm(`Delete ${changedPerson.name}?`)) {\n      personService.deletePerson(id).then(() => {\n        setPersons(persons.filter(p => p.id !== id));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {showMessage && <Notification message={showMessage} checker={checker} />}\n      <Filter persons={persons} filter={filter} handleFilter={handleFilter} />\n      <h3>Add a new:</h3>\n      <PersonForm\n        addPerson={addPerson}\n        handleChangeName={handleChangeName}\n        handleChangePhone={handleChangePhone}\n        newName={newName}\n        newPhoneNumber={newPhoneNumber}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={!filterPersons ? persons : filterPersons} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}